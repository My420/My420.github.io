{"version":3,"sources":["components/App/App.module.scss","components/CrewScreen/CrewScreen.module.scss","components/Inputs/Input/Input.module.scss","components/CrewCard/CrewCard.module.scss","components/Map/Map.module.scss","components/CrewList/CrewList.module.scss","utils/validateAddress.ts","services/map.ts","services/generateAnswer.ts","utils/getDate.ts","services/crew.ts","services/generateOrder.ts","services/order.ts","ducks/orderForm.ts","components/MenuSubmitButton/MenuSubmitButton.tsx","components/MenuSubmitButton/index.tsx","components/CrewCard/index.ts","components/CrewCard/CrewCard.tsx","ducks/selector.ts","components/Spinner/index.tsx","components/Spinner/Spinner.tsx","components/Alert/Alert.tsx","components/CrewScreen/CrewScreen.tsx","components/CrewScreen/index.ts","components/Map/Map.tsx","components/Map/index.tsx","components/CrewItem/index.tsx","components/CrewItem/CrewItem.tsx","components/CrewList/CrewList.tsx","components/CrewList/index.ts","components/Inputs/Input/Input.tsx","components/Inputs/Input/index.tsx","components/Inputs/AddressInput/AddressInput.tsx","utils/constant.ts","components/Inputs/AddressInput/index.tsx","components/InputField/InputField.tsx","components/InputField/index.tsx","components/ModalCard/index.tsx","components/ModalCard/ModalCard.tsx","components/ModalWindow/ModalWindow.tsx","components/ModalWindow/index.tsx","components/OrderForm/index.tsx","components/OrderForm/OrderForm.tsx","components/App/index.tsx","components/App/App.tsx","store/store.ts","components/Root/index.ts","components/Root/Root.tsx","index.tsx","components/OrderForm/OrderForm.module.scss","components/CrewItem/CrewItem.module.scss"],"names":["module","exports","tester","ERROR","isValid","error","VALID_EMAIL","validateAddressInput","address","test","trim","VALID_ADDRESS_MARK_OPTIONS","preset","INVALID_ADDRESS_MARK_OPTIONS","CAB_MARK_OPTIONS","VALID_ADDRESS_MARK_PROPERTIES","INVALID_ADDRESS_MARK_PROPERTIES","iconCaption","CAB_MARK_PROPERTIES","DEFAULT_MAP_OPTIONS","center","zoom","ERRORS","mapService","map","addressMark","invalidAddressMark","cabMarks","addressMarkSubscribers","createCabMarks","a","i","mark","MapServices","createCabMark","push","placeAddressMark","e","coords","get","getAddress","changeInvalidMarkToValid","data","lat","lon","notifyAll","changeValidMarkToInvalid","displayCabLocation","amount","Math","min","length","loc","moveMark","geoObjects","add","deleteCabFromMap","forEach","cab","remove","id","this","window","ymaps","geolocation","location","bounds","properties","mapState","util","getCenterAndZoom","myMap","Map","events","Placemark","subs","options","boundedBy","getBounds","result","geocode","response","firstGeoObject","geometry","getCoordinates","setBounds","checkZoomRange","deleteAddressMarksFromMap","func","filter","el","ready","createMap","createAddressMark","createInvalidAddressMark","setCoordinates","streetName","getThoroughfare","houseNumber","getPremiseNumber","message","console","log","generateAnswer","request","requestData","addresses","mock","code","descr","crews_info","crew_id","car_mark","car_model","car_color","car_number","driver_name","driver_phone","distance","Promise","res","setTimeout","JSON","stringify","transform","v","getDate","date","Date","year","getFullYear","month","getMonth","day","hours","getHours","minutes","getMinutes","second","getSeconds","getCrew","source_time","answer","parse","findCrew","crews","generateOrder","order_id","getOrder","crewID","findOrder","orderID","CREW_CLEAR","ORDER_CLEAR","loadLocationSuccess","type","payload","loadLocationError","errorMsg","loadCrewSuccess","clearCrew","sendOrderError","sortCrews","sort","b","getCrewInfo","dispatch","crewsData","initialState","input","value","isLoading","crew","list","selected","order","isSending","isSuccess","reducer","state","action","status","newLocation","newInput","newCrew","newOrder","MenuSubmitButton","text","name","onButtonClick","extensionClass","disabled","rest","className","onClick","defaultProps","CrewCard","car","color","number","styles","card","style","width","getInputStatus","store","getLocationStatus","getCrewStatus","getFormStatus","isInputValid","isAddressValid","getOrderStatus","Spinner","isLarge","height","role","Alert","CrewScreen","locationStatus","useSelector","shallowEqual","crewStatus","component","props","wrapper","container","React","memo","useDispatch","onMapClick","setLocationFromCoords","useEffect","init","onAddressMarkChange","CrewItem","model","CrewList","key","Input","btnName","onInputChange","onEnterPress","label","placeholder","htmlFor","onChange","evt","currentTarget","inputName","newValue","onKeyPress","preventDefault","btnContainer","prevProps","nextProps","prevValue","prevIsValid","prevError","nextValue","nextIsValid","nextError","AddressInput","extensionContainerClass","extensionInputClass","InputField","getState","getCoordinate","_name","changeInput","ModalCard","title","successMsg","tabIndex","display","data-dismiss","aria-label","aria-hidden","ModalWindow","handleClick","OrderForm","isFormValid","inputs","noGut","control","orderData","App","header","main","enhancer","applyMiddleware","ReduxThunk","withReduxDevTools","composeWithDevTools","createStore","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aeb2a568.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__16p6_\",\"main\":\"App_main__1GL3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CrewScreen_container__2ypqt\",\"wrapper\":\"CrewScreen_wrapper__2A4bk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Input_error__3S6wi\",\"btnContainer\":\"Input_btnContainer__3Fimd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CrewCard_card__2Tt90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__p4UMk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CrewList_list__GqEho\"};","import { IErrorConstant, IFieldValidator } from '../types';\r\n\r\n// eslint-disable-next-line no-useless-escape\r\nconst tester = /^(\\d{1,2}-?[а-яё]\\s)?([А-Яа-я]\\s?)+(,?\\s{1,3})(\\d{1,4})([\\\\\\/]\\d{1,4})?$/i;\r\n\r\nexport const ERROR: IErrorConstant = {\r\n  EMPTY: { isValid: false, error: 'Адрес на может быть пустым' },\r\n  NOT_VALID: { isValid: false, error: 'Неправильный адрес. Адрес должен иметь вид: Улица, номер дома.' },\r\n};\r\n\r\nexport const VALID_EMAIL = { isValid: true, error: '' };\r\n\r\nconst validateAddressInput = (address: string): IFieldValidator => {\r\n  if (!address) return ERROR.EMPTY;\r\n\r\n  const valid = tester.test(address.trim());\r\n  if (!valid) return ERROR.NOT_VALID;\r\n\r\n  return VALID_EMAIL;\r\n};\r\n\r\nexport default validateAddressInput;\r\n","// inaccuracies in the package @types/yandex-maps\r\nimport {\r\n  IPlacemarkOptions,\r\n  IGeometry,\r\n  IGeoObjectCollection,\r\n} from '../types/ymap';\r\n\r\n\r\n//    constant\r\n\r\nconst ADDRESS_MARK_STYLE = 'islands#yellowDotIcon';\r\nconst CAB_MARK_STYLE = 'islands#darkGreenAutoIcon';\r\nconst INVALID_MARK_STYLE = 'islands#redDotIcon';\r\nconst MAX_CAB_AMOUNT = 10;\r\n\r\nconst VALID_ADDRESS_MARK_OPTIONS = {\r\n  preset: ADDRESS_MARK_STYLE,\r\n} as IPlacemarkOptions;\r\n\r\nconst INVALID_ADDRESS_MARK_OPTIONS = {\r\n  preset: INVALID_MARK_STYLE,\r\n} as IPlacemarkOptions;\r\n\r\nconst CAB_MARK_OPTIONS = {\r\n  preset: CAB_MARK_STYLE,\r\n} as IPlacemarkOptions;\r\n\r\nconst VALID_ADDRESS_MARK_PROPERTIES = {};\r\n\r\nconst INVALID_ADDRESS_MARK_PROPERTIES = {\r\n  iconCaption: 'Адрес не найден',\r\n};\r\n\r\nconst CAB_MARK_PROPERTIES = {};\r\n\r\nconst DEFAULT_MAP_OPTIONS = {\r\n  center: [55.76, 37.64],\r\n  zoom: 7,\r\n};\r\nconst ERRORS = {\r\n  FIND_BY_PLACEMARK: 'Не удалось определить улицу и номер дома.',\r\n  FIND_BY_ADDRESS: 'Не возможно найти адрес на карте.',\r\n  API: 'Нет связи с сервером геолокации.',\r\n};\r\n\r\n\r\n//    type\r\n\r\nexport interface IMarkData {\r\n  address: string,\r\n  lat: number,\r\n  lon: number,\r\n}\r\n\r\nexport interface IAddressError {\r\n  error: string,\r\n  lat?: number,\r\n  lon?: number,\r\n}\r\n\r\nexport interface addressMarkObserver{\r\n  (data: IMarkData | IAddressError): any\r\n}\r\n\r\nexport interface ICabInfo {\r\n  crew_id: number,\r\n  car_mark: string,\r\n  car_model: string,\r\n  car_color: string,\r\n  car_number: string,\r\n  driver_name: string,\r\n  driver_phone: string,\r\n  lat: number,\r\n  lon: number,\r\n  distance: number\r\n}\r\n\r\n\r\n//    service\r\n\r\n\r\nclass MapServices {\r\n  private map: ymaps.Map | null = null;\r\n\r\n  private addressMark: ymaps.Placemark | null = null;\r\n\r\n  private invalidAddressMark: ymaps.Placemark | null = null;\r\n\r\n  private cabMarks: ymaps.Placemark[] = [];\r\n\r\n  private addressMarkSubscribers: addressMarkObserver[] = [];\r\n\r\n\r\n  static moveMark(mark: ymaps.Placemark, coords: number[]) {\r\n    if (mark.geometry) {\r\n      const geometry = mark.geometry as IGeometry; // inaccuracies in the package @types/yandex-maps\r\n      geometry.setCoordinates(coords);\r\n    }\r\n  }\r\n\r\n  static async getAddress(coords: number[]): Promise<string | null> {\r\n    try {\r\n      const response = await window.ymaps.geocode(coords) as IGeoObjectCollection;\r\n\r\n      const streetName = response.geoObjects.get(0).getThoroughfare();\r\n      const houseNumber = response.geoObjects.get(0).getPremiseNumber();\r\n      if (streetName && houseNumber) return `${streetName}, ${houseNumber}`;\r\n      return null;\r\n    } catch (e) {\r\n      const { message } = e as Error;\r\n      console.log(`Ошибка при определении адреса пользователя. ${message}`);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static createCabMark(coords: number[]) {\r\n    return new window.ymaps.Placemark(\r\n      coords,\r\n      CAB_MARK_PROPERTIES,\r\n      CAB_MARK_OPTIONS,\r\n    );\r\n  }\r\n\r\n\r\n  private async createMap(id: string) {\r\n    if (!this.map) {\r\n      try {\r\n        const location = await window.ymaps.geolocation.get() as IGeoObjectCollection;\r\n        const bounds = location.geoObjects.get(0).properties.get('boundedBy', {}) as number[];\r\n        const mapState = window.ymaps.util.bounds.getCenterAndZoom(bounds, [300, 300]);\r\n\r\n        const myMap = new window.ymaps.Map(id, mapState);\r\n        this.map = myMap;\r\n      } catch (e) {\r\n        const myMap = new window.ymaps.Map(id, DEFAULT_MAP_OPTIONS);\r\n        this.map = myMap;\r\n      }\r\n      this.map.events.add('click', this.placeAddressMark);\r\n    }\r\n  }\r\n\r\n  private createAddressMark() {\r\n    this.addressMark = new window.ymaps.Placemark(\r\n      [55.76, 37.64],\r\n      VALID_ADDRESS_MARK_PROPERTIES,\r\n      VALID_ADDRESS_MARK_OPTIONS,\r\n    );\r\n  }\r\n\r\n  private createInvalidAddressMark() {\r\n    this.invalidAddressMark = new window.ymaps.Placemark(\r\n      [55.76, 37.64],\r\n      INVALID_ADDRESS_MARK_PROPERTIES,\r\n      INVALID_ADDRESS_MARK_OPTIONS,\r\n    );\r\n  }\r\n\r\n\r\n  private createCabMarks = async () => {\r\n    for (let i = 0; i < MAX_CAB_AMOUNT; i += 1) {\r\n      const mark = MapServices.createCabMark([55.76, 37.64]);\r\n      this.cabMarks.push(mark);\r\n    }\r\n  };\r\n\r\n  private changeInvalidMarkToValid(coords: number[]) {\r\n    if (this.map && this.invalidAddressMark && this.addressMark) {\r\n      this.map.geoObjects.remove(this.invalidAddressMark);\r\n      MapServices.moveMark(this.addressMark, coords);\r\n      this.map.geoObjects.add(this.addressMark);\r\n    }\r\n  }\r\n\r\n  private changeValidMarkToInvalid(coords: number[]) {\r\n    if (this.map && this.invalidAddressMark && this.addressMark) {\r\n      this.map.geoObjects.remove(this.addressMark);\r\n      MapServices.moveMark(this.invalidAddressMark, coords);\r\n      this.map.geoObjects.add(this.invalidAddressMark);\r\n    }\r\n  }\r\n\r\n\r\n  private placeAddressMark = async (e: object | ymaps.IEvent) => {\r\n    const event = e as ymaps.IEvent;\r\n    const coords = event.get('coords') as number[];\r\n    if (this.addressMark && this.map) {\r\n      const address = await MapServices.getAddress(coords);\r\n      if (address) {\r\n        this.changeInvalidMarkToValid(coords);\r\n        const data: IMarkData = {\r\n          address,\r\n          lat: coords[0],\r\n          lon: coords[1],\r\n        };\r\n        this.notifyAll(data);\r\n      } else {\r\n        this.changeValidMarkToInvalid(coords);\r\n        const data: IAddressError = {\r\n          error: ERRORS.FIND_BY_PLACEMARK,\r\n          lat: coords[0],\r\n          lon: coords[1],\r\n        };\r\n        this.notifyAll(data);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  private notifyAll(data: IMarkData | IAddressError) {\r\n    this.addressMarkSubscribers.forEach((subs) => subs(data));\r\n  }\r\n\r\n  displayCabLocation = async (data: ICabInfo[]) => {\r\n    const amount = Math.min(data.length, MAX_CAB_AMOUNT);\r\n    for (let i = 0; i < amount; i += 1) {\r\n      const loc = [data[i].lat, data[i].lon];\r\n      if (this.cabMarks[i]) {\r\n        MapServices.moveMark(this.cabMarks[i], loc);\r\n      } else {\r\n        this.cabMarks[i] = MapServices.createCabMark(loc);\r\n      }\r\n      if (this.map) this.map.geoObjects.add(this.cabMarks[i]);\r\n    }\r\n  };\r\n\r\n  deleteAddressMarksFromMap() {\r\n    if (this.map && this.addressMark && this.invalidAddressMark) {\r\n      this.map.geoObjects.remove(this.addressMark);\r\n      this.map.geoObjects.remove(this.invalidAddressMark);\r\n    }\r\n  }\r\n\r\n  deleteCabFromMap = async () => {\r\n    this.cabMarks.forEach((cab) => {\r\n      if (this.map) this.map.geoObjects.remove(cab);\r\n    });\r\n  };\r\n\r\n  async getCoordinate(address: string): Promise<IMarkData | IAddressError> {\r\n    if (this.map) {\r\n      const options = {\r\n        boundedBy: this.map.getBounds(),\r\n        result: 1,\r\n      };\r\n      try {\r\n        const response = await window.ymaps.geocode(address, options) as IGeoObjectCollection;\r\n        const firstGeoObject = response.geoObjects.get(0);\r\n        if (firstGeoObject) {\r\n          const coords = firstGeoObject.geometry.getCoordinates();\r\n          const bounds = firstGeoObject.properties.get('boundedBy', {}) as number[][];\r\n          if (this.addressMark) {\r\n            this.changeInvalidMarkToValid(coords);\r\n            this.map.setBounds(bounds, {\r\n              checkZoomRange: true,\r\n            });\r\n          }\r\n          return {\r\n            address,\r\n            lat: coords[0],\r\n            lon: coords[1],\r\n          };\r\n        }\r\n      } catch (e) {\r\n        this.deleteAddressMarksFromMap();\r\n        return { error: ERRORS.API };\r\n      }\r\n    }\r\n    this.deleteAddressMarksFromMap();\r\n    return { error: ERRORS.FIND_BY_ADDRESS };\r\n  }\r\n\r\n  onAddressMarkChange(func: addressMarkObserver) {\r\n    this.addressMarkSubscribers.push(func);\r\n  }\r\n\r\n  unsubscribeAddressMark(func: addressMarkObserver) {\r\n    this.addressMarkSubscribers = this.addressMarkSubscribers.filter((el) => !(el === func));\r\n  }\r\n\r\n  init(id: string) {\r\n    window.ymaps.ready(() => {\r\n      this.createMap(id);\r\n      this.createAddressMark();\r\n      this.createInvalidAddressMark();\r\n      this.createCabMarks();\r\n    });\r\n  }\r\n}\r\n\r\nconst mapService = new MapServices();\r\n\r\nexport default mapService;\r\n","\r\ninterface ILocation {\r\n  address:string,\r\n  lat: number,\r\n  lon: number\r\n}\r\n\r\ninterface ICrewRequest {\r\n  source_time: string,\r\n  addresses: ILocation[]\r\n}\r\n\r\nconst generateAnswer = (request: ICrewRequest) => {\r\n  const requestData = request.addresses[0];\r\n  const { lat, lon } = requestData;\r\n\r\n  const mock = {\r\n    code: 200,\r\n    descr: 'OK',\r\n    data: {\r\n      crews_info: [\r\n        {\r\n          crew_id: 123,\r\n          car_mark: 'KIA',\r\n          car_model: 'CEED',\r\n          car_color: 'синий',\r\n          car_number: 'Е234КУ',\r\n          driver_name: 'Деточкин',\r\n          driver_phone: '7788',\r\n          lat: lat + 0.002670,\r\n          lon: lon + 0.009012,\r\n          distance: 900,\r\n        }, {\r\n          crew_id: 125,\r\n          car_mark: 'Hyundai',\r\n          car_model: 'Solaris',\r\n          car_color: 'белый',\r\n          car_number: 'Ф567АС',\r\n          driver_name: 'Петров',\r\n          driver_phone: '8899',\r\n          lat: lat + 0.00298,\r\n          lon: lon + 0.003232,\r\n          distance: 600,\r\n        }, {\r\n          crew_id: 127,\r\n          car_mark: 'Lada',\r\n          car_model: 'Vesta',\r\n          car_color: 'черный',\r\n          car_number: 'Е134КР',\r\n          driver_name: 'Васильев',\r\n          driver_phone: '8989',\r\n          lat: lat - 0.0022892,\r\n          lon: lon - 0.0030001,\r\n          distance: 600,\r\n        },\r\n        {\r\n          crew_id: 130,\r\n          car_mark: 'Chevrolet',\r\n          car_model: 'Lacetti',\r\n          car_color: 'красный',\r\n          car_number: 'А875КР',\r\n          driver_name: 'Семенов',\r\n          driver_phone: '456456',\r\n          lat: lat + 0.001212,\r\n          lon: lon + 0.001233,\r\n          distance: 300,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return new Promise<string>((res) => {\r\n    setTimeout(() => res(JSON.stringify(mock)), 600);\r\n  });\r\n};\r\n\r\nexport default generateAnswer;\r\n","\r\nconst transform = (v: number) => {\r\n  if (v < 10) return `0${v}`;\r\n  return `${v}`;\r\n};\r\n\r\nconst getDate = (): string => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const hours = date.getHours();\r\n  const minutes = date.getMinutes();\r\n  const second = date.getSeconds();\r\n\r\n  return `${year}${transform(month)}${transform(day)}${transform(hours)}${transform(minutes)}${transform(second)}`;\r\n};\r\n\r\nexport default getDate;\r\n","import generateAnswer from './generateAnswer';\r\nimport getDate from '../utils/getDate';\r\n\r\n\r\nexport interface ILocation {\r\n  address:string,\r\n  lat: number,\r\n  lon: number\r\n}\r\n\r\nexport interface ICrewRequest {\r\n  source_time: string,\r\n  addresses: ILocation[]\r\n}\r\n\r\nexport interface ICrewInfo {\r\n  crew_id:number,\r\n  car_mark:string,\r\n  car_model:string,\r\n  car_color:string,\r\n  car_number:string,\r\n  driver_name:string,\r\n  driver_phone:string,\r\n  lat:number,\r\n  lon:number,\r\n  distance:number\r\n}\r\n\r\nexport interface ICrewAnswer {\r\n  code: number,\r\n  descr: string,\r\n  data:{\r\n    crews_info: ICrewInfo[]\r\n  }\r\n}\r\n\r\nexport interface ICrewError {\r\n  error: string,\r\n}\r\n\r\nexport interface ICrewData {\r\n  data: ICrewInfo[],\r\n}\r\n\r\nconst getCrew = async (data: ILocation): Promise<ICrewAnswer> => {\r\n  const requestData: ICrewRequest = {\r\n    source_time: getDate(),\r\n    addresses: [data],\r\n  };\r\n  console.log('Crew request ', requestData);\r\n\r\n  try {\r\n    const answer = await generateAnswer(requestData);\r\n    return JSON.parse(answer) as ICrewAnswer;\r\n  } catch (e) {\r\n    const { message } = e as Error;\r\n    return {\r\n      code: 400,\r\n      descr: message,\r\n      data: {\r\n        crews_info: [],\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport const findCrew = async (data: ILocation): Promise<ICrewData | ICrewError> => {\r\n  const response = await getCrew(data);\r\n  const { code, descr, data: { crews_info: crews } } = response;\r\n\r\n  if (code !== 200) return { error: descr };\r\n  if (crews.length === 0) return { error: 'Не найдено ни одного экипажа.' };\r\n\r\n  return { data: crews };\r\n};\r\n","\r\ninterface ILocation {\r\n  address:string,\r\n  lat: number,\r\n  lon: number\r\n}\r\n\r\ninterface IData {\r\n  source_time: string,\r\n  addresses: ILocation[],\r\n  crew_id: number,\r\n}\r\n\r\nconst generateOrder = (request: IData) => {\r\n  const { crew_id: id } = request;\r\n\r\n  const mock = {\r\n    code: 200,\r\n    descr: 'OK',\r\n    data: {\r\n      order_id: `99${id}`,\r\n    },\r\n  };\r\n\r\n  return new Promise<string>((res) => {\r\n    setTimeout(() => res(JSON.stringify(mock)), 600);\r\n  });\r\n};\r\n\r\nexport default generateOrder;\r\n","import generateOrder from './generateOrder';\r\nimport getDate from '../utils/getDate';\r\n\r\nexport interface ILocation {\r\n  address:string,\r\n  lat: number,\r\n  lon: number\r\n}\r\n\r\nexport interface IOrderError {\r\n  error: string,\r\n}\r\n\r\nexport interface IOrderData {\r\n  orderID: number,\r\n}\r\n\r\nexport interface IOrderRequest {\r\n  source_time: string,\r\n  addresses: ILocation[],\r\n  crew_id: number,\r\n}\r\n\r\nexport interface IOrderAnswer {\r\n  code: number,\r\n  descr: string,\r\n  data:{\r\n    order_id: number,\r\n  }\r\n}\r\n\r\nconst getOrder = async (data: ILocation, crewID: number): Promise<IOrderAnswer> => {\r\n  const requestData: IOrderRequest = {\r\n    source_time: getDate(),\r\n    addresses: [data],\r\n    crew_id: crewID,\r\n  };\r\n\r\n  console.log('Order request ', requestData);\r\n\r\n  try {\r\n    const answer = await generateOrder(requestData);\r\n    return JSON.parse(answer) as IOrderAnswer;\r\n  } catch (e) {\r\n    const { message } = e as Error;\r\n    return {\r\n      code: 400,\r\n      descr: message,\r\n      data: {\r\n        order_id: 0,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport const findOrder = async (\r\n  address: ILocation,\r\n  crewID: number): Promise<IOrderData | IOrderError> => {\r\n  const response = await getOrder(address, crewID);\r\n  const { code, descr, data: { order_id: id } } = response;\r\n\r\n  if (code !== 200) return { error: descr };\r\n  return { orderID: id };\r\n};\r\n","import { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\nimport validateAddressInput from '../utils/validateAddress';\r\nimport mapService from '../services/map';\r\nimport { findCrew } from '../services/crew';\r\nimport { findOrder } from '../services/order';\r\n\r\n// constant\r\n\r\nexport const moduleName = 'ORDER_FORM';\r\nexport const INPUT_CHANGE = 'ORDER_FORM/INPUT/CHANGE';\r\nexport const LOCATION_LOAD_REQUEST = 'ORDER_FORM/LOCATION/LOAD_REQUEST';\r\nexport const LOCATION_LOAD_SUCCESS = 'ORDER_FORM/LOCATION/LOAD_SUCCESS';\r\nexport const LOCATION_LOAD_ERROR = 'ORDER_FORM/LOCATION/LOAD_ERROR';\r\nexport const CREW_LOAD_REQUEST = 'ORDER_FORM/CREW/LOAD_REQUEST';\r\nexport const CREW_LOAD_SUCCESS = 'ORDER_FORM/CREW/LOAD_SUCCESS';\r\nexport const CREW_LOAD_ERROR = 'ORDER_FORM/CREW/LOAD_ERROR';\r\nexport const CREW_CLEAR = 'ORDER_FORM/CREW/CLEAR';\r\nexport const ORDER_SEND_REQUEST = 'ORDER_FORM/ORDER/SEND_REQUEST';\r\nexport const ORDER_SEND_SUCCESS = 'ORDER_FORM/ORDER/SEND_SUCCESS';\r\nexport const ORDER_SEND_ERROR = 'ORDER_FORM/ORDER/SEND_ERROR';\r\nexport const ORDER_CLEAR = 'ORDER_FORM/ORDER/CLEAR';\r\n\r\n\r\n// types\r\n\r\nexport interface ICrewInfo {\r\n  crew_id: number,\r\n  car_mark: string,\r\n  car_model: string,\r\n  car_color: string,\r\n  car_number: string,\r\n  driver_name: string,\r\n  driver_phone: string,\r\n  lat: number,\r\n  lon: number,\r\n  distance: number\r\n}\r\n\r\nexport type CrewList = ICrewInfo[];\r\nexport interface ICrewData { data: ICrewInfo[] }\r\n\r\nexport interface IOrder {\r\n  source_time: string,\r\n  addresses: ILocation[],\r\n  crew_id: number,\r\n}\r\n\r\nexport interface ILocation {\r\n  address: string,\r\n  lat: number,\r\n  lon: number,\r\n}\r\n\r\nexport interface ILocationError {\r\n  error: string,\r\n  lat?: number,\r\n  lon?: number,\r\n}\r\n\r\nexport interface IChangeInputAction {\r\n  type: typeof INPUT_CHANGE,\r\n  payload: {data: string}\r\n}\r\n\r\nexport interface ILocationLoadRequestAction {\r\n  type: typeof LOCATION_LOAD_REQUEST,\r\n  payload: null,\r\n}\r\n\r\nexport interface ILocationLoadSuccessAction {\r\n  type: typeof LOCATION_LOAD_SUCCESS,\r\n  payload: {data: ILocation},\r\n}\r\n\r\nexport interface ILocationLoadErrorAction {\r\n  type: typeof LOCATION_LOAD_ERROR,\r\n  payload: {error: string},\r\n}\r\n\r\nexport interface ICrewLoadRequestAction {\r\n  type: typeof CREW_LOAD_REQUEST,\r\n  payload: null,\r\n}\r\nexport interface ICrewLoadSuccessAction {\r\n  type: typeof CREW_LOAD_SUCCESS,\r\n  payload: ICrewData,\r\n}\r\n\r\nexport interface ICrewLoadErrorAction {\r\n  type: typeof CREW_LOAD_ERROR,\r\n  payload: { error: string },\r\n}\r\n\r\nexport interface ICrewClearAction {\r\n  type: typeof CREW_CLEAR,\r\n  payload: null,\r\n}\r\n\r\nexport interface IOrderSendRequestAction {\r\n  type: typeof ORDER_SEND_REQUEST,\r\n  payload: null,\r\n}\r\n\r\nexport interface IOrderSendSuccessAction {\r\n  type: typeof ORDER_SEND_SUCCESS,\r\n  payload: {id: number},\r\n}\r\n\r\nexport interface IOrderSendErrorAction {\r\n  type: typeof ORDER_SEND_ERROR,\r\n  payload: { error: string },\r\n}\r\n\r\nexport interface IOrderClearAction {\r\n  type: typeof ORDER_CLEAR,\r\n  payload: null,\r\n}\r\n\r\nexport interface ReducerState {\r\n  input: {\r\n    isValid: boolean,\r\n    value: string,\r\n    error: string,\r\n  },\r\n  location: {\r\n    isLoading: boolean,\r\n    isValid: boolean,\r\n    error: string,\r\n    address: string,\r\n    lat: null | number,\r\n    lon: null | number,\r\n  },\r\n  crew: {\r\n    isLoading: boolean,\r\n    error: string,\r\n    list: CrewList| null,\r\n    selected: number | null,\r\n  },\r\n  order: {\r\n    isSending: boolean,\r\n    isSuccess: boolean,\r\n    error: string,\r\n    orderID: number | null,\r\n  }\r\n}\r\n\r\nexport type ActionType = IChangeInputAction\r\n| ILocationLoadRequestAction\r\n| ILocationLoadSuccessAction\r\n| ILocationLoadErrorAction\r\n| ICrewLoadRequestAction\r\n| ICrewLoadSuccessAction\r\n| ICrewLoadErrorAction\r\n| IOrderSendRequestAction\r\n| IOrderSendSuccessAction\r\n| IOrderSendErrorAction\r\n| ICrewClearAction\r\n| IOrderClearAction;\r\n\r\n// action creator\r\n\r\nexport const changeInput = (value: string): IChangeInputAction => ({\r\n  type: INPUT_CHANGE,\r\n  payload: { data: value },\r\n});\r\n\r\nexport const loadLocation = (): ILocationLoadRequestAction => ({\r\n  type: LOCATION_LOAD_REQUEST,\r\n  payload: null,\r\n});\r\n\r\n\r\nexport const loadLocationSuccess = (data: ILocation): ILocationLoadSuccessAction => ({\r\n  type: LOCATION_LOAD_SUCCESS,\r\n  payload: { data },\r\n});\r\n\r\nexport const loadLocationError = (errorMsg: string): ILocationLoadErrorAction => ({\r\n  type: LOCATION_LOAD_ERROR,\r\n  payload: { error: errorMsg },\r\n});\r\n\r\nexport const loadCrew = (): ICrewLoadRequestAction => ({\r\n  type: CREW_LOAD_REQUEST,\r\n  payload: null,\r\n});\r\n\r\nexport const loadCrewSuccess = (data: ICrewData): ICrewLoadSuccessAction => ({\r\n  type: CREW_LOAD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const loadCrewError = (errorMsg: string): ICrewLoadErrorAction => ({\r\n  type: CREW_LOAD_ERROR,\r\n  payload: { error: errorMsg },\r\n});\r\n\r\nexport const clearCrew = (): ICrewClearAction => ({\r\n  type: CREW_CLEAR,\r\n  payload: null,\r\n});\r\n\r\nexport const sendOrder = (): IOrderSendRequestAction => ({\r\n  type: ORDER_SEND_REQUEST,\r\n  payload: null,\r\n});\r\n\r\nexport const sendOrderSuccess = (id: number): IOrderSendSuccessAction => ({\r\n  type: ORDER_SEND_SUCCESS,\r\n  payload: { id },\r\n});\r\n\r\nexport const sendOrderError = (errorMsg: string): IOrderSendErrorAction => ({\r\n  type: ORDER_SEND_ERROR,\r\n  payload: { error: errorMsg },\r\n});\r\n\r\nexport const clearOrder = (): IOrderClearAction => ({\r\n  type: ORDER_CLEAR,\r\n  payload: null,\r\n});\r\n\r\n// utils\r\n\r\nconst sortCrews = (crews: CrewList): CrewList => crews.sort((a, b) => {\r\n  if (a.distance > b.distance) return 1;\r\n  if (a.distance < b.distance) return -1;\r\n  return 0;\r\n});\r\n\r\n\r\n// async action creator\r\nexport const getCrewInfo = (data: ILocation): ThunkAction<Promise<void>,\r\nReducerState, {}, ActionType> => async (dispatch: ThunkDispatch<{}, {}, ActionType>) => {\r\n  dispatch(loadCrew());\r\n  const crewsData = await findCrew(data);\r\n  if ('data' in crewsData) {\r\n    dispatch(loadCrewSuccess(crewsData));\r\n    mapService.displayCabLocation([...crewsData.data]);\r\n  } else {\r\n    dispatch(loadCrewError(crewsData.error));\r\n    mapService.deleteCabFromMap();\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line arrow-body-style\r\nexport const getLocationByAddress = (): ThunkAction<Promise<void>,\r\nReducerState,\r\n{},\r\nActionType> => async (dispatch: ThunkDispatch<ReducerState, {}, ActionType>, getState) => {\r\n  dispatch(loadLocation());\r\n  dispatch(clearCrew());\r\n  const { value } = getState().input;\r\n  const data = await mapService.getCoordinate(value);\r\n  if ('address' in data) {\r\n    dispatch(loadLocationSuccess(data));\r\n    dispatch(getCrewInfo(data));\r\n  } else {\r\n    dispatch(loadLocationError(data.error));\r\n    mapService.deleteCabFromMap();\r\n  }\r\n};\r\n\r\nexport const setLocationFromCoords = (data: ILocation | ILocationError): ThunkAction<Promise<void>,\r\nReducerState, {}, ActionType> => async (dispatch: ThunkDispatch<ReducerState, {}, ActionType>) => {\r\n  dispatch(loadLocation());\r\n  dispatch(clearCrew());\r\n  if ('error' in data) {\r\n    const { error } = data;\r\n    dispatch(loadLocationError(error));\r\n    mapService.deleteCabFromMap();\r\n  } else {\r\n    dispatch(loadLocationSuccess(data));\r\n    dispatch(getCrewInfo(data));\r\n  }\r\n};\r\n\r\nexport const sendUserOrder = (): ThunkAction<Promise<void>,\r\nReducerState,\r\n{},\r\nActionType> => async (dispatch: ThunkDispatch<ReducerState, {}, ActionType>, getState) => {\r\n  const { input: { value }, location, crew: { selected } } = getState();\r\n  const { address, lat, lon } = location;\r\n  dispatch(sendOrder());\r\n  if (value === address && lat && lon && selected) {\r\n    const orderData = await findOrder({ address, lat, lon }, selected);\r\n    if ('orderID' in orderData) {\r\n      dispatch(sendOrderSuccess(orderData.orderID));\r\n    } else {\r\n      dispatch(sendOrderError(orderData.error));\r\n    }\r\n  } else {\r\n    dispatch(sendOrderError('Адрес в поле ввода не совпадает с меткой на карте.'));\r\n  }\r\n};\r\n\r\n// reducer\r\nexport const initialState: ReducerState = {\r\n  input: {\r\n    isValid: false,\r\n    value: '',\r\n    error: '',\r\n  },\r\n  location: {\r\n    isLoading: false,\r\n    isValid: false,\r\n    error: '',\r\n    address: '',\r\n    lat: null,\r\n    lon: null,\r\n  },\r\n  crew: {\r\n    isLoading: false,\r\n    error: '',\r\n    list: [],\r\n    selected: null,\r\n  },\r\n  order: {\r\n    isSending: false,\r\n    error: '',\r\n    isSuccess: false,\r\n    orderID: null,\r\n  },\r\n};\r\n\r\nconst reducer = (state: ReducerState = initialState, action: ActionType) => {\r\n  switch (action.type) {\r\n    case INPUT_CHANGE: {\r\n      const { payload } = action;\r\n      const { data: value } = payload;\r\n      const status = validateAddressInput(value);\r\n      return { ...state, input: { ...status, value } };\r\n    }\r\n    case LOCATION_LOAD_REQUEST: {\r\n      const newLocation = {\r\n        ...state.location,\r\n        isLoading: true,\r\n        error: '',\r\n        isValid: false,\r\n        address: '',\r\n        lat: null,\r\n        lon: null,\r\n      };\r\n      return { ...state, location: newLocation };\r\n    }\r\n    case LOCATION_LOAD_SUCCESS: {\r\n      const { data } = action.payload;\r\n      const newLocation = {\r\n        ...state.location, ...data, isLoading: false, isValid: true,\r\n      };\r\n      const newInput = {\r\n        ...state.input, isValid: true, error: '', value: data.address,\r\n      };\r\n      return { ...state, location: newLocation, input: newInput };\r\n    }\r\n    case LOCATION_LOAD_ERROR: {\r\n      const { error } = action.payload;\r\n      const newLocation = {\r\n        ...state.location,\r\n        isLoading: false,\r\n        error,\r\n      };\r\n      return { ...state, location: newLocation };\r\n    }\r\n    case CREW_LOAD_REQUEST: {\r\n      const newCrew = {\r\n        ...state.crew,\r\n        isLoading: true,\r\n        error: '',\r\n        list: [],\r\n        selected: null,\r\n      };\r\n      return { ...state, crew: newCrew };\r\n    }\r\n    case CREW_LOAD_SUCCESS: {\r\n      const { data } = action.payload;\r\n      sortCrews(data);\r\n      const newCrew = {\r\n        ...state.crew, isLoading: false, list: [...data], selected: data[0].crew_id,\r\n      };\r\n      return { ...state, crew: newCrew };\r\n    }\r\n    case CREW_LOAD_ERROR: {\r\n      const { error } = action.payload;\r\n      const newCrew = { ...state.crew, isLoading: false, error };\r\n      return { ...state, crew: newCrew };\r\n    }\r\n\r\n    case CREW_CLEAR: {\r\n      const newCrew = {\r\n        ...state.crew,\r\n        isLoading: false,\r\n        error: '',\r\n        list: [],\r\n        selected: null,\r\n      };\r\n      return { ...state, crew: newCrew };\r\n    }\r\n\r\n    case ORDER_SEND_REQUEST: {\r\n      const newOrder = {\r\n        ...state.order,\r\n        isSending: true,\r\n        error: '',\r\n        isSuccess: false,\r\n        orderID: null,\r\n      };\r\n      return { ...state, order: newOrder };\r\n    }\r\n\r\n    case ORDER_SEND_SUCCESS: {\r\n      const newOrder = {\r\n        ...state.order,\r\n        isSending: false,\r\n        isSuccess: true,\r\n        orderID: action.payload.id,\r\n      };\r\n      return { ...state, order: newOrder };\r\n    }\r\n\r\n    case ORDER_SEND_ERROR: {\r\n      const newOrder = {\r\n        ...state.order,\r\n        isSending: false,\r\n        error: action.payload.error,\r\n      };\r\n      return { ...state, order: newOrder };\r\n    }\r\n\r\n    case ORDER_CLEAR: {\r\n      const newOrder = {\r\n        ...state.order,\r\n        isSending: false,\r\n        error: '',\r\n        isSuccess: false,\r\n        orderID: null,\r\n      };\r\n      return { ...state, order: newOrder };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from 'react';\r\n// import styles from './MenuSubmitButton.module.scss';\r\n\r\n/* React.HTMLAttributes<HTMLButtonElement> disabled and other attr don't work */\r\nexport interface MenuSubmitButtonProps\r\n  extends React.DetailedHTMLProps<\r\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n  HTMLButtonElement\r\n  > {\r\n  disabled: boolean,\r\n  text: string;\r\n  name: string;\r\n  onButtonClick: (evt: React.MouseEvent<HTMLButtonElement>) => void;\r\n  extensionClass?: string;\r\n}\r\n\r\nconst MenuSubmitButton: React.FC<MenuSubmitButtonProps> = ({\r\n  text,\r\n  name,\r\n  extensionClass,\r\n  onButtonClick,\r\n  disabled,\r\n  ...rest\r\n}) => (\r\n  <button\r\n    className={`btn btn-lg btn-${disabled ? 'secondary' : 'primary'}`}\r\n    type=\"submit\"\r\n    name={name}\r\n    onClick={onButtonClick}\r\n    disabled={disabled}\r\n    {...rest}\r\n  >\r\n    {text}\r\n  </button>\r\n);\r\n\r\nMenuSubmitButton.defaultProps = {\r\n  extensionClass: '',\r\n};\r\nexport default MenuSubmitButton;\r\n","import MenuSubmitButton from './MenuSubmitButton';\r\n\r\nexport default MenuSubmitButton;\r\n","import CrewCard from './CrewCard';\r\n\r\nexport default CrewCard;\r\n","import React from 'react';\r\nimport styles from './CrewCard.module.scss';\r\n\r\ninterface ICrewCardProps {\r\n  car: string,\r\n  color: string,\r\n  number: string\r\n}\r\n\r\nconst CrewCard: React.FC<ICrewCardProps> = ({ car, color, number }) => (\r\n\r\n  <div className={`card ${styles.card}`} style={{ width: '18rem' }}>\r\n    <div className=\"card-body\">\r\n      <h5 className=\"card-title\">{car}</h5>\r\n      <h6 className=\"card-subtitle mb-2 text-muted\">{color}</h6>\r\n      <p className=\"card-text\"><strong><em>{number}</em></strong></p>\r\n    </div>\r\n  </div>\r\n\r\n\r\n);\r\n\r\nexport default CrewCard;\r\n","import { AppState } from '../store/store';\r\n\r\nexport const getInputStatus = (store: AppState) => store.input;\r\n\r\nexport const getLocationStatus = (store: AppState) => ({\r\n  isValid: store.location.isValid,\r\n  isLoading: store.location.isLoading,\r\n  error: store.location.error,\r\n});\r\n\r\nexport const getCrewStatus = (store: AppState) => ({\r\n  crew: store.crew.selected,\r\n  isLoading: store.crew.isLoading,\r\n  error: store.crew.error,\r\n  list: store.crew.list,\r\n});\r\n\r\nexport const getFormStatus = (store: AppState) => ({\r\n  isInputValid: store.input.isValid,\r\n  isAddressValid: store.location.isValid,\r\n  crew: store.crew.selected,\r\n});\r\n\r\nexport const getOrderStatus = (store: AppState) => ({ ...store.order });\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;\r\n","import * as React from 'react';\r\n\r\ninterface ISpinnerProps {\r\n  isLarge?: boolean,\r\n}\r\n\r\nconst Spinner: React.FC<ISpinnerProps> = ({ isLarge }) => {\r\n  const styles = {\r\n    width: isLarge ? '5rem' : '2rem',\r\n    height: isLarge ? '5rem' : '2rem',\r\n  };\r\n  return (\r\n    <div className=\"spinner-border text-info\" style={styles} role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\n\r\nexport interface AlertProps {\r\n  text?: string\r\n}\r\n\r\nconst Alert: React.SFC<AlertProps> = ({ text }) => {\r\n  const defaultText = 'Введите адрес подачи такси, или укажите место на карте.';\r\n  const style = text ? 'danger' : 'info';\r\n  return (<div className={`alert alert-${style}`} role=\"alert\">{text || defaultText}</div>);\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport CrewCard from '../CrewCard';\r\nimport { getLocationStatus, getCrewStatus } from '../../ducks/selector';\r\nimport styles from './CrewScreen.module.scss';\r\nimport Spinner from '../Spinner';\r\nimport Alert from '../Alert/Alert';\r\n\r\n\r\nconst CrewScreen: React.FC = () => {\r\n  const locationStatus = useSelector(getLocationStatus, shallowEqual);\r\n  const crewStatus = useSelector(getCrewStatus, shallowEqual);\r\n\r\n  let component: React.ReactNode = <Alert />;\r\n\r\n  if (locationStatus.isLoading || crewStatus.isLoading) {\r\n    component = <Spinner />;\r\n  } else if (locationStatus.error || crewStatus.error) {\r\n    const text = locationStatus.error || crewStatus.error;\r\n    component = <Alert text={text} />;\r\n  } else if (crewStatus.crew && crewStatus.list) {\r\n    const car = crewStatus.list[0];\r\n    const props = {\r\n      color: car.car_color,\r\n      car: `${car.car_mark} ${car.car_model}`,\r\n      number: car.car_number,\r\n    };\r\n    component = <CrewCard {...props} />;\r\n  }\r\n\r\n  return (\r\n    <div className={`form-group row flex-column flex-sm-row ${styles.wrapper}`}>\r\n      <div className=\"vol col-sm-3\">\r\n        <p>Подходящий экипаж:</p>\r\n      </div>\r\n      <div className={`col col-sm-6 ${styles.container}`}>\r\n        {component}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrewScreen;\r\n","import React from 'react';\r\nimport CrewScreen from './CrewScreen';\r\n\r\nexport default React.memo(CrewScreen);\r\n","import React, { useEffect } from 'react';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  ActionType, setLocationFromCoords, ReducerState,\r\n} from '../../ducks/orderForm';\r\nimport mapService, { IAddressError, IMarkData } from '../../services/map';\r\nimport styles from './Map.module.scss';\r\n\r\n\r\nconst Map: React.FC = () => {\r\n  const dispatch = useDispatch<ThunkDispatch<ReducerState, {}, ActionType>>();\r\n\r\n  const onMapClick = (data: IMarkData | IAddressError) => {\r\n    dispatch(setLocationFromCoords(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    mapService.init('ymap');\r\n    mapService.onAddressMarkChange(onMapClick);\r\n  });\r\n  return (<div id=\"ymap\" className={`card ${styles.map}`} />);\r\n};\r\nexport default Map;\r\n","import React from 'react';\r\nimport Map from './Map';\r\n\r\nexport default React.memo(Map);\r\n","import CrewItem from './CrewItem';\r\n\r\nexport default CrewItem;\r\n","import React from 'react';\r\nimport { ICrewInfo } from '../../ducks/orderForm';\r\nimport styles from './CrewItem.module.scss';\r\n\r\nexport interface CrewItemProps {\r\n  data: ICrewInfo\r\n}\r\n\r\nconst CrewItem: React.FC<CrewItemProps> = ({ data }) => (\r\n  <li className=\"list-group-item d-flex justify-content-between\">\r\n    <div className={styles.wrapper}>\r\n      <h5 className={styles.model}>{`${data.car_mark} ${data.car_model}`}</h5>\r\n      <p className={styles.color}>{`${data.car_color}`}</p>\r\n    </div>\r\n    <p className={styles.distance}><em>{`${data.distance}м`}</em></p>\r\n  </li>\r\n);\r\n\r\nexport default CrewItem;\r\n","import React from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport { getCrewStatus } from '../../ducks/selector';\r\nimport styles from './CrewList.module.scss';\r\nimport CrewItem from '../CrewItem';\r\n\r\n\r\nconst CrewList: React.FC = () => {\r\n  const { list } = useSelector(getCrewStatus, shallowEqual);\r\n  return (\r\n    <div className={`card ${styles.list}`}>\r\n      <ul className=\"list-group\">\r\n        {list && list.map((el) => (<CrewItem data={el} key={el.crew_id} />)) }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CrewList;\r\n","import React from 'react';\r\nimport CrewList from './CrewList';\r\n\r\nexport default React.memo(CrewList);\r\n","import React from 'react';\r\nimport { InputAttributeType } from '../../../types';\r\nimport styles from './Input.module.scss';\r\n\r\nexport interface InputProps extends React.HTMLAttributes<HTMLInputElement> {\r\n  label: string;\r\n  btnName: string;\r\n  type: InputAttributeType;\r\n  name: string;\r\n  id: string;\r\n  placeholder: string;\r\n  extensionContainerClass?: string;\r\n  extensionInputClass?: string;\r\n  value: string;\r\n  isValid: boolean;\r\n  error: string;\r\n  onInputChange: (name: string, value: string) => void;\r\n  onButtonClick: (e: React.MouseEvent) => void;\r\n  onEnterPress: (e: React.KeyboardEvent) => void;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  value,\r\n  btnName,\r\n  onInputChange,\r\n  onButtonClick,\r\n  onEnterPress,\r\n  label,\r\n  name,\r\n  id,\r\n  type,\r\n  placeholder,\r\n  isValid,\r\n  error,\r\n}) => {\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name: inputName, value: newValue } = evt.currentTarget;\r\n    onInputChange(inputName, newValue);\r\n  };\r\n\r\n  const handleClick = (evt: React.MouseEvent) => {\r\n    evt.preventDefault();\r\n    onButtonClick(evt);\r\n  };\r\n\r\n  const handleKeyPress = (evt: React.KeyboardEvent) => {\r\n    if (evt.key === 'Enter' && isValid) {\r\n      evt.preventDefault();\r\n      onEnterPress(evt);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <div className=\"row flex-column flex-sm-row\">\r\n        <label htmlFor={id} className=\"col col-sm-3 col-form-label\">\r\n          {label}\r\n        </label>\r\n        <div className=\"col col-sm-7\">\r\n          <input\r\n            value={value}\r\n            id={id}\r\n            className=\"form-control\"\r\n            name={name}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n        </div>\r\n        <div className={`col col-sm-2 d-flex justify-content-center ${styles.btnContainer}`}>\r\n          <button\r\n            type=\"button\"\r\n            className={`btn btn-${isValid ? 'info' : 'secondary'}`}\r\n            onClick={handleClick}\r\n            disabled={!isValid}\r\n          >\r\n            {btnName}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-end\">\r\n        <div className=\"col col-sm-9\">\r\n          <span className={`alert-danger ${styles.error}`}>\r\n            {error}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\n// ${isValid ? 'invisible' : ''}\r\n","import React from 'react';\r\nimport Input, { InputProps } from './Input';\r\n\r\nconst areEqual = (prevProps: InputProps, nextProps: InputProps) => {\r\n  const { value: prevValue, isValid: prevIsValid, error: prevError } = prevProps;\r\n  const { value: nextValue, isValid: nextIsValid, error: nextError } = nextProps;\r\n  return prevValue === nextValue && prevIsValid === nextIsValid && prevError === nextError;\r\n};\r\n\r\nexport default React.memo(Input, areEqual);\r\n","import React from 'react';\r\nimport FROM_ADDRESS_INPUT from '../../../utils/constant';\r\nimport AuthInput from '../Input';\r\n\r\nexport interface AddressInputProps {\r\n  extensionContainerClass?: string;\r\n  extensionInputClass?: string;\r\n  value: string;\r\n  isValid: boolean;\r\n  error: string;\r\n  onInputChange: (name: string, value: string) => void;\r\n  onButtonClick: (e: React.MouseEvent) => void;\r\n  onEnterPress: (e: React.KeyboardEvent) => void;\r\n}\r\n\r\nconst AddressInput: React.FC<AddressInputProps> = (props) => (\r\n  <AuthInput\r\n    id=\"fromAddress\"\r\n    name={`${FROM_ADDRESS_INPUT}`}\r\n    type=\"text\"\r\n    placeholder=\"например: Пушкина, 20\"\r\n    label=\"Откуда:\"\r\n    btnName=\"Найти\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nAddressInput.defaultProps = {\r\n  extensionContainerClass: '',\r\n  extensionInputClass: '',\r\n};\r\n\r\nexport default AddressInput;\r\n","\r\nconst FROM_ADDRESS_INPUT = 'fromAddress';\r\n\r\nexport default FROM_ADDRESS_INPUT;\r\n","import AddressInput from './AddressInput';\r\n\r\nexport default AddressInput;\r\n","import React from 'react';\r\n// import { Dispatch } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  ActionType, changeInput, getLocationByAddress, ReducerState,\r\n} from '../../ducks/orderForm';\r\nimport { getInputStatus } from '../../ducks/selector';\r\nimport AddressInput from '../Inputs/AddressInput';\r\n\r\n\r\nconst InputField: React.FC = () => {\r\n  const status = useSelector(getInputStatus);\r\n  const dispatch = useDispatch<ThunkDispatch<ReducerState, {}, ActionType>>();\r\n  const onInputChange = (_name: string, value: string) => {\r\n    dispatch(changeInput(value));\r\n  };\r\n  const onButtonClick = () => {\r\n    dispatch(getLocationByAddress());\r\n  };\r\n\r\n  return (\r\n    <AddressInput\r\n      {...status}\r\n      onInputChange={onInputChange}\r\n      onButtonClick={onButtonClick}\r\n      onEnterPress={onButtonClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\nimport InputField from './InputField';\r\n\r\nexport default React.memo(InputField);\r\n","import ModalCard from './ModalCard';\r\n\r\nexport default ModalCard;\r\n","import React from 'react';\r\n// import styles from './ModalCard.module.scss';\r\n\r\nexport interface ModalCardProps {\r\n  isSuccess: boolean\r\n  orderID?: number | null,\r\n  error?: string,\r\n  onButtonClick: (e: React.MouseEvent) => void;\r\n}\r\n\r\n\r\nconst ModalCard: React.FC<ModalCardProps> = ({\r\n  isSuccess, error, orderID, onButtonClick,\r\n}) => {\r\n  const title = isSuccess ? 'Успешно!' : 'Ошибка!';\r\n  const successMsg = `Ваш заказ №${orderID} принят, ожидайте звонка.`;\r\n  const errorMsg = error || 'Адрес на карте и в поле ввода не совпадают!';\r\n\r\n  return (\r\n    <div className=\"modal d-flex justify-content-center align-items-center\" tabIndex={-1} role=\"dialog\" style={{ display: 'flex' }}>\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{title}</h5>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={onButtonClick}>\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>{isSuccess ? successMsg : errorMsg}</p>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={onButtonClick}>Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalCard;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { ActionType, clearOrder } from '../../ducks/orderForm';\r\nimport { getOrderStatus } from '../../ducks/selector';\r\nimport ModalCard from '../ModalCard';\r\nimport Spinner from '../Spinner';\r\n\r\nconst ModalWindow: React.FC = () => {\r\n  const order = useSelector(getOrderStatus, shallowEqual);\r\n  const dispatch = useDispatch<Dispatch<ActionType>>();\r\n\r\n  const handleClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    dispatch(clearOrder());\r\n  };\r\n\r\n  const {\r\n    isSending, isSuccess, error, orderID,\r\n  } = order;\r\n\r\n  return (\r\n    <div>\r\n      {isSending\r\n        && (\r\n        <div className=\"modal d-flex justify-content-center align-items-center\" tabIndex={-1} role=\"dialog\" style={{ display: 'flex' }}>\r\n          <Spinner isLarge />\r\n        </div>\r\n        )}\r\n      {isSuccess && <ModalCard isSuccess orderID={orderID} onButtonClick={handleClick} />}\r\n      {error && <ModalCard isSuccess={false} error={error} onButtonClick={handleClick} />}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ModalWindow;\r\n","import React from 'react';\r\nimport ModalWindow from './ModalWindow';\r\n\r\nexport default React.memo(ModalWindow);\r\n","import OrderForm from './OrderForm';\r\n\r\nexport default OrderForm;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { ActionType, ReducerState, sendUserOrder } from '../../ducks/orderForm';\r\nimport MenuSubmitButton from '../MenuSubmitButton';\r\nimport CrewScreen from '../CrewScreen';\r\nimport Map from '../Map';\r\nimport CrewList from '../CrewList';\r\nimport InputField from '../InputField';\r\nimport styles from './OrderForm.module.scss';\r\nimport { getFormStatus } from '../../ducks/selector';\r\nimport ModalWindow from '../ModalWindow';\r\n\r\nconst OrderForm: React.FC = () => {\r\n  const data = useSelector(getFormStatus, shallowEqual);\r\n  const dispatch = useDispatch<ThunkDispatch<ReducerState, {}, ActionType>>();\r\n  const isFormValid = data.isAddressValid && data.isInputValid && !!data.crew;\r\n\r\n  const onClick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    dispatch(sendUserOrder());\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" name=\"signInForm\">\r\n      <p className=\"visually-hidden\">Форма заказа</p>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <fieldset className={styles.inputs}>\r\n            <InputField />\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n\r\n      <fieldset className={styles.crew}>\r\n        <CrewScreen />\r\n      </fieldset>\r\n      <div className={`row flex-column flex-sm-row ${styles.noGut}`}>\r\n        <div className=\"col col-sm-8\">\r\n          <fieldset className={styles.map}>\r\n            <Map />\r\n          </fieldset>\r\n        </div>\r\n        <div className=\"col col-sm-4\">\r\n          <fieldset className={styles.list}>\r\n            <CrewList />\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-auto\">\r\n          <fieldset className={styles.control}>\r\n            <MenuSubmitButton\r\n              text=\"Заказать\"\r\n              name=\"signInSubmit\"\r\n              onButtonClick={onClick}\r\n              disabled={!isFormValid}\r\n            />\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n      <ModalWindow />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderForm;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport styles from './App.module.scss';\r\nimport OrderForm from '../OrderForm';\r\n\r\n\r\nconst App: React.FC = () => (\r\n  <div className=\"container-md\">\r\n    <header className={styles.header}>\r\n      <div className=\"row justify-content-center\">\r\n        <h2>Детали заказа</h2>\r\n      </div>\r\n    </header>\r\n\r\n    <main className={styles.main}>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col col-md-12 col-lg-9 col-xl-8\">\r\n          <OrderForm />\r\n        </div>\r\n      </div>\r\n    </main>\r\n\r\n    <footer className=\"visually-hidden\" />\r\n\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware } from 'redux';\r\n/* eslint import/no-extraneous-dependencies: [\"error\", {\"peerDependencies\": true}] */\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport reducer, { initialState } from '../ducks/orderForm';\r\n\r\nconst enhancer = applyMiddleware(ReduxThunk);\r\n\r\nconst withReduxDevTools = composeWithDevTools(enhancer);\r\n\r\nconst store = createStore(reducer, initialState, withReduxDevTools);\r\n\r\nexport type AppState = ReturnType<typeof reducer>;\r\n\r\nexport default store;\r\n","import Root from './Root';\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport App from '../App';\r\nimport store from '../../store/store';\r\n\r\nconst Root: React.FC = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport Root from './components/Root';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noGut\":\"OrderForm_noGut__Qq_4V\",\"col\":\"OrderForm_col__3l-Wa\",\"map\":\"OrderForm_map__1_9gb\",\"list\":\"OrderForm_list__2fI09\",\"control\":\"OrderForm_control__1-HC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"model\":\"CrewItem_model__Rc-dG\",\"color\":\"CrewItem_color__35wet\",\"distance\":\"CrewItem_distance__36Dpy\"};"],"sourceRoot":""}