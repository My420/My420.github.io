!function(){"use strict";const t=t=>{const e=document.createElement("template");return e.innerHTML=t,e.content};class e{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(new.target===e)throw new Error("Can't instantiate BaseComponent, only concrete one.");this._element=null,this._parentElement=t}get element(){return this._element}get template(){throw new Error("You have to define a template.")}render(){return this._element=t(this.template),this.bind(),1===this._parentElement.nodeType&&this._parentElement.appendChild(this.element),this._element}bind(){}unbind(){}unrender(){this.unbind(),1===this._parentElement.nodeType&&(this._parentElement.innerHTML=""),this._element=null}}const s=t=>{t.setAttribute("readonly","true"),t.setAttribute("disabled","true"),setTimeout(()=>{t.blur(),t.removeAttribute("readonly"),t.removeAttribute("disabled")},100)},a=t=>{const e=t.split("-");return{year:e[0],month:e[1],date:e[2]}},n=t=>t.split("T")[0],i=["пн","вт","ср","чт","пт","сб","вс"],r=42,o={"01":{},"02":{},"03":{},"04":{},"05":{},"06":{},"07":{},"08":{},"09":{},10:{},11:{},12:{}},l={"01":{sub:"Январь",dir:"января"},"02":{sub:"Февраль",dir:"февраля"},"03":{sub:"Март",dir:"марта"},"04":{sub:"Апрель",dir:"апреля"},"05":{sub:"Май",dir:"мая"},"06":{sub:"Июнь",dir:"июня"},"07":{sub:"Июль",dir:"июля"},"08":{sub:"Август",dir:"августа"},"09":{sub:"Сентябрь",dir:"сентября"},10:{sub:"Октябрь",dir:"октября"},11:{sub:"Ноябрь",dir:"ноября"},12:{sub:"Декабрь",dir:"Декабря"}},c="TASKCALENDAR",d={RED:"red",ORANGE:"orange",YELLOW:"yellow",GREEN:"green",YELLOWGREEN:"yellowgreen"},h={ACTIVE:"active",DONE:"done"},_="**|",u="|**",k="Enter",m="Escape",p=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const{year:s,month:i,date:r}=a(n(t));return e?`${r} ${l[i].dir} ${s}`:`${l[i].sub} ${s}`};class g extends e{constructor(t,e){super(e),this._chosenDate=t,this._onUserClick=this._onUserClick.bind(this),this._onSubmit=this._onSubmit.bind(this)}get template(){return`<header class="app__header header">\n      <h1 class="visually-hidden">Календарь задач</h1>\n      <p class="header__logo">TaskCalendar</p>\n      <nav class="header__navigation">\n      <div class="header__cover">\n      <button class="header__button header__button--create" data-target="create">\n        <span class="visually-hidden">Создать задачу</span>+</button>\n      <div class="header__navigation-wrapper">\n      <button class="header__button header__button--prev" data-target="prev">\n        <span class="visually-hidden">Предыдущий месяц</span><</button>\n      <p class="header__screen">${p(this._chosenDate)}</p>\n      <button class="header__button header__button--next" data-target="next">\n        <span class="visually-hidden">Следующий месяц</span>></button>\n      </div>\n      </div>\n      <div class="header__search-wrapper">\n        <form class="header__form" action="somephpfile.php">\n          <div class="header__form-inner">\n            <input class="header__search" type="text" minlength="3" placeholder="поиск..." required/>\n            <button class="header__button header__button--search" type="submit">\n              <span class="visually-hidden">Поиск</span>\n              <svg width="100%" height="100%" viewBox="0 0 24 24">\n                <path\n                  class='header__path'\n                  d="M23.111 20.058l-4.977-4.977c.965-1.52 1.523-3.322 1.523-5.251 0-5.42-4.409-9.83-9.829-9.83-5.42 0-9.828 4.41-9.828 9.83s4.408 9.83 9.829 9.83c1.834 0 3.552-.505 5.022-1.383l5.021 5.021c2.144 2.141 5.384-1.096 3.239-3.24zm-20.064-10.228c0-3.739 3.043-6.782 6.782-6.782s6.782 3.042 6.782 6.782-3.043 6.782-6.782 6.782-6.782-3.043-6.782-6.782zm2.01-1.764c1.984-4.599 8.664-4.066 9.922.749-2.534-2.974-6.993-3.294-9.922-.749z"\n                />\n              </svg>\n            </button>\n          </div>\n        </form>\n      </div>\n      </nav>\n    </header>`}_onSubmit(t){t.preventDefault();const e=this._input.value;this.onSearchButtonClick(e),s(this._input)}_onUserClick(t){const e=t.target.dataset.target;"prev"===e?this.onPrevButtonClick():"next"===e?this.onNextButtonClick():"create"===e&&this.onCreateButtonClick()}changeDisplayedDate(t){this._chosenDate=t;const e=p(this._chosenDate);this._dateScreen.innerHTML=e}bind(){this._header=this.element.querySelector(".app__header"),this._header.addEventListener("click",this._onUserClick),this._dateScreen=this.element.querySelector(".header__screen"),this._form=this.element.querySelector(".header__form"),this._form.addEventListener("submit",this._onSubmit),this._input=this.element.querySelector(".header__search")}unbind(){this._header.removeEventListener("click",this._onUserClick),this._form.removeEventListener("submit",this._onSubmit),this._header=null,this._dateScreen=null,this._form=null,this._input=null}onPrevButtonClick(){}onNextButtonClick(){}onSearchButtonClick(){}onCreateButtonClick(){}}const v=t=>{if(t){return t.map(t=>{const{taskColor:e,taskStatus:s,taskId:a}=t;return`<div class="calendar__task" data-color=${e} data-status=${s} data-id=${a}></div>`}).join("")}return""},f=(t,e,s,i,r)=>{const o=n(t),l=n(e),{date:c,month:d}=a(o),h=r[o];return`<td class="calendar__day">\n    <div class="calendar__cell" data-date=${o} data-active=${o===l} data-today=${n(s)===o} data-current=${d===i} tabindex='0'>\n    <div class="calendar__screen" data-date=${o} data-droppable='false'></div>\n      <span class="calendar__day-number">${+c}</span>    \n      <div class="calendar__task-wrapper">\n        ${v(h)}\n      </div>      \n    </div>    \n</td>`},b=t=>{let e=t.getDay();for(;1!==e;)t.setDate(t.getDate()-1),e=t.getDay()},y=(t,e,s,n)=>{const r=new Date(t),o=a(r.toJSON()).month;b(r);let l=`<tr class="calendar__row">\n        ${i.map(t=>`<th class="calendar__header">${t}</th>`).join("")}\n    </tr>`;for(let t=0;t<6;t+=1){l+='<tr class="calendar__row">';for(let t=0;t<7;t+=1)l+=f(r.toJSON(),e,s,o,n),r.setDate(r.getDate()+1);l+="</tr>"}return l};class T extends e{constructor(t,e,s,a,n){super(n),this._calendarDate=t,this._tasksDate=e,this._todayDate=s,this._tasks=a,this._onUserClick=this._onUserClick.bind(this),this._onKeyUp=this._onKeyUp.bind(this)}get template(){return`\n    <section class="app__calendar calendar">\n    <h2 class="visually-hidden">Календарь</h2>\n    <table class="calendar__table">          \n        ${y(this._calendarDate,this._tasksDate,this._todayDate,this._tasks)}  \n    </table>\n  </section>\n    `}_onKeyUp(t){const{code:e}=t;e===k&&this._onUserClick(t)}_onUserClick(t){const e=t.target.dataset.date;e&&this.onCellClick(e)}_findTasksContainerByDate(t){const e=this._table.querySelector(`.calendar__cell[data-date='${t}']`);return e&&e.querySelector(".calendar__task-wrapper")}_findTask(t,e){return this._findTasksContainerByDate(t).querySelector(`.calendar__task[data-id="${e}"]`)}bind(){this._table=this.element.querySelector(".calendar__table"),this._table.addEventListener("click",this._onUserClick),this._table.addEventListener("keyup",this._onKeyUp)}unbind(){this._table.removeEventListener("click",this._onUserClick),this._table.removeEventListener("keyup",this._onKeyUp)}changeActiveCell(t){const e=n(this._tasksDate),s=this._table.querySelector(`.calendar__cell[data-date='${e}']`),a=n(t),i=this._table.querySelector(`.calendar__cell[data-date='${a}']`);s.dataset.active=!1,i.dataset.active=!0,this._tasksDate=t}changeCalendar(t,e,s,a){this.unrender(),this._calendarDate=t,this._tasksDate=e,this._todayDate=s,this._tasks=a,this.render()}addTaskToCell(t){const{taskDate:e}=t,s=this._findTasksContainerByDate(e);if(s){const e=v([t]);s.insertAdjacentHTML("beforeend",e)}}deleteTaskFromCell(t,e){this._findTask(t,e).remove()}changeTaskInCell(t){const{taskDate:e,taskId:s,taskStatus:a,taskColor:n}=t,i=this._findTask(e,s);i.dataset.color=n,i.dataset.status=a}onCellClick(){}}function D(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}function C(t,e){var s=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),s.push.apply(s,a)}return s}function w(t){for(var e=1;e<arguments.length;e++){var s=null!=arguments[e]?arguments[e]:{};e%2?C(Object(s),!0).forEach((function(e){D(t,e,s[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(s)):C(Object(s)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(s,e))}))}return t}const E=(t,e)=>{const{taskColor:s,taskName:a,taskStatus:n,taskDate:i,taskId:r}=t;return`<li class="taskList__item" data-id=${r} data-date=${i}>\n  <div class="taskList__screen" data-id=${r} data-date=${i} data-index=${e} tabindex='0'></div>\n  <div class="taskList__wrapper">    \n    <div class="taskList__color" data-color=${s} data-status=${n}></div>\n    <div class="taskList__inner">\n      <p class="taskList__name" data-status=${n}>${a}</p>\n    </div>\n    </div>    \n  </li>`},L=(t,e)=>{for(let s=0;s<t.length;s+=1)if(t[s].taskId===e)return s};class S extends e{constructor(t,e,s){super(s),this._listDate=t,this._tasks=e||[],this._emptyMessageTemplate='<li class="taskList__message">задач нет</li>',this._onUserClick=this._onUserClick.bind(this),this._onKeyUp=this._onKeyUp.bind(this),this._onUserPress=this._onUserPress.bind(this),this._onPress=this._onPress.bind(this)}_findTask(t){return this._taskList.querySelector(`.taskList__item[data-id="${t}"]`)}_getListTemplate(){if(this._tasks.length>0){return this._tasks.map((t,e)=>E(t,e)).join("")}return this._emptyMessageTemplate}_deleteEmptyMessage(){this._taskList.querySelector(".taskList__message").remove()}_showEmptyMessage(){this._taskList.insertAdjacentHTML("beforeend",this._emptyMessageTemplate)}_onKeyUp(t){const{code:e}=t;e===k&&this._onUserClick(t)}_onUserClick(t){if("taskList__screen"===t.target.className){const{date:e}=t.target.dataset,{id:s}=t.target.dataset;this.onTaskClick(e,s)}}_onUserPress(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];t.preventDefault();const s=e?t:t.changedTouches[0],a=s.target,n=a.parentNode;let i=!1;const r=s.clientX,o=s.clientY,l=r-a.getBoundingClientRect().left,c=o-a.getBoundingClientRect().top,{offsetWidth:d,offsetHeight:h}=a;let _=null;const u=n.cloneNode(!0);u.style.width=`${d}px`,u.style.height=`${h}px`;const k=(t,e)=>{u.style.left=`${t-l}px`,u.style.top=`${e-c}px`},m=t=>{const s=e?t:t.changedTouches[0],a=r-s.pageX,l=o-s.pageY;if(Math.abs(a)>3||Math.abs(l)>3){i=!0,n.hidden=!0,document.body.append(u),k(s.pageX,s.pageY),u.hidden=!0;const t=document.elementFromPoint(s.clientX,s.clientY);if(u.hidden=!1,k(s.pageX,s.pageY),!t)return;const e=t.closest(".calendar__screen");_!==e&&(_&&(_.dataset.droppable=!1),_=e,e&&(_.dataset.droppable=!0))}},p=()=>{if(_){_.dataset.droppable=!1,u.remove();const t=a.dataset.index,e=this._tasks[t],s=e.taskDate,i=_.dataset.date;if(i===s)n.hidden=!1;else{const t=w({},e,{taskDate:i}),s=w({},e);this.onTaskChange({oldTask:s,newTask:t})}}else i?(u.remove(),n.hidden=!1):this._onUserClick(s);e?(document.removeEventListener("mousemove",m),document.removeEventListener("mouseup",p)):(document.removeEventListener("touchmove",m),document.removeEventListener("touchend",p))};e?(document.addEventListener("mousemove",m),document.addEventListener("mouseup",p)):(document.addEventListener("touchmove",m),document.addEventListener("touchend",p))}_onPress(t){"taskList__screen"===t.target.className&&("mousedown"===t.type&&t.button<2?this._onUserPress(t,!0):"touchstart"===t.type&&this._onUserPress(t,!1))}get template(){return`\n      <section class="app__taskList taskList">\n      <h2 class="visually-hidden">Список дел</h2>\n      <ul class="taskList__list">${this._getListTemplate()}</ul>\n    </section>\n      `}changeTasks(t,e){this.unrender(),this._listDate=t,this._tasks=e||[],this.render()}addTaskToList(t){const{taskDate:e}=t;if(e===n(this._listDate)){0===this._tasks.length&&this._deleteEmptyMessage(),this._tasks.push(t);const e=E(t);this._taskList.insertAdjacentHTML("beforeend",e)}}deleteTaskFromList(t){this._findTask(t).remove();const e=L(this._tasks,t);this._tasks.splice(e,1),0===this._tasks.length&&this._showEmptyMessage()}changeTask(e){const{taskId:s}=e,a=t(E(e));this._findTask(s).replaceWith(a)}bind(){this._taskList=this.element.querySelector(".taskList__list"),this._taskList.addEventListener("keyup",this._onKeyUp),this._taskList.addEventListener("mousedown",this._onPress),this._taskList.addEventListener("touchstart",this._onPress)}unbind(){this._taskList.removeEventListener("keyup",this._onKeyUp),this._taskList.removeEventListener("mousedown",this._onPress),this._taskList.removeEventListener("touchstart",this._onPress)}onTaskClick(){}onTaskChange(){}}const $=()=>{return Math.random().toString(36).substr(2,5)};class N extends e{constructor(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(e),this._isChangeTask=!!s,this._taskDate=n(t),this._parentElement=e,this._cardData=s,this._onUserClick=this._onUserClick.bind(this),this._onSubmit=this._onSubmit.bind(this),this._onKeyUp=this._onKeyUp.bind(this)}_setFocus(){setTimeout(()=>{this._form.querySelector(".form__name").focus()},50)}_getFormData(){const t=new FormData(this._form),e={};return t.forEach((t,s)=>{e[s]=t}),e}_onKeyUp(t){const{code:e}=t;e===m&&this.unrender()}_onUserClick(t){const{action:e}=t.target.dataset;"cancel"===e&&this.unrender()}_onSubmit(t){t.preventDefault();const e=this._getFormData();if(this._isChangeTask){const t=this._cardData,s=e;this.onTaskChange({oldTask:t,newTask:s}),this.unrender()}else this.onNewTaskAdd(e),this.unrender()}get template(){const t=this._isChangeTask?"Изменить задачу":"Создать задачу",e=this._isChangeTask?this._cardData.taskId:$(),s=this._isChangeTask?this._cardData.taskName:"",a=this._isChangeTask?this._cardData.taskDescription:"",n=this._isChangeTask?this._cardData.taskColor:d.GREEN,i=this._isChangeTask?this._cardData.taskStatus:h.ACTIVE;return`<section class="app__card-edit card-edit" data-action='cancel'>\n    <h2 class="visually-hidden">${t}</h2>\n    <form class="card-edit__form form" action="somephpfile.php">\n      <p class="form__title">${t}:</p>\n      <fieldset class="form__field form__field--information">\n        <legend class="form__legend form__legend--information visually-hidden">\n          Основная информация\n        </legend>\n        <label for="id" class="form__label form__label--id visually-hidden">ID</label>\n        <input\n          id="id"\n          class="form__id visually-hidden"\n          type="text"\n          name="taskId"\n          value="${e}"\n          required\n          tabindex="-1"       \n        />\n        <div class='form__label-wrapper'>\n        <label for="taskDate" class="form__label form__label--date"\n          >Дата:</label\n        >\n        </div>\n        <input\n          id="taskDate"\n          class="form__date"\n          type="date"\n          name="taskDate"\n          value=${this._taskDate}\n          required          \n        />\n        <div class='form__label-wrapper'>\n        <label for="name" class="form__label form__label--name"\n          >Задача:</label\n        >\n        </div>\n        <input\n          id="name"\n          class="form__name"\n          type="text"\n          name="taskName"          \n          value="${s}"         \n          required                 \n        />\n        <div class='form__label-wrapper'>\n        <label\n          for="description"\n          class="form__label form__label--description"\n          >Описание:</label\n        >\n        </div>\n        <textarea\n          id="description"\n          class="form__description"\n          name="taskDescription"\n          placeholder="дополнительное описание"                 \n        >${a}</textarea>\n      </fieldset>\n\n      <fieldset class="form__field form__field--colorPicker">\n        <legend class="form__legend form__legend--colorPicker">\n          Выбор цвета:\n        </legend>\n        <div class="form__inner form__inner--colorPicker">\n        <input\n          id="color-${d.RED}"\n          class="form__radio form__radio--red visually-hidden"\n          type="radio"\n          name="taskColor"\n          value=${d.RED}\n          ${n===d.RED?"checked":""}    \n        />\n        <label for="color-${d.RED}" class="form__label form__label--colorPicker"\n          ><span class="visually-hidden">Красный</span></label\n        >\n        <input\n          id="color-${d.ORANGE}"\n          class="form__radio form__radio--orange visually-hidden"\n          type="radio"\n          name="taskColor"\n          value=${d.ORANGE}\n          ${n===d.ORANGE?"checked":""}  \n        />\n        <label\n          for="color-${d.ORANGE}"\n          class="form__label form__label--colorPicker"\n          ><span class="visually-hidden">Оранжевый</span></label\n        >\n        <input\n          id="color-${d.YELLOW}"\n          class="form__radio form__radio--yellow visually-hidden"\n          type="radio"\n          name="taskColor"\n          value=${d.YELLOW}\n          ${n===d.YELLOW?"checked":""}  \n        />\n        <label\n          for="color-${d.YELLOW}"\n          class="form__label form__label--colorPicker"\n          ><span class="visually-hidden">Желтый</span></label\n        >\n        <input\n          id="color-${d.GREEN}"\n          class="form__radio form__radio--green visually-hidden"\n          type="radio"\n          name="taskColor"\n          value=${d.GREEN}\n          ${n===d.GREEN?"checked":""}  \n        />\n        <label\n          for="color-${d.GREEN}"\n          class="form__label form__label--colorPicker"\n          ><span class="visually-hidden">Зеленый</span></label\n        >\n        <input\n          id="color-${d.YELLOWGREEN}"\n          class="form__radio form__radio--yellowgreen visually-hidden"\n          type="radio"\n          name="taskColor"\n          value=${d.YELLOWGREEN}\n          ${n===d.YELLOWGREEN?"checked":""}  \n        />\n        <label\n          for="color-${d.YELLOWGREEN}"\n          class="form__label form__label--colorPicker"\n          ><span class="visually-hidden">Желто-зелёный</span></label\n        >\n        </div>  \n      </fieldset>\n      <fieldset class="form__field form__field--status">\n        <legend class="form__legend form__legend--status">\n          Статус:\n        </legend>\n        <div class="form__inner form__inner--status">\n        <input\n          id="status-${h.ACTIVE}"\n          class="form__radio form__radio--${h.ACTIVE} visually-hidden"\n          type="radio"\n          name="taskStatus"\n          value=${h.ACTIVE}\n          ${i===h.ACTIVE?"checked":""}           \n        />\n        <label for="status-${h.ACTIVE}" class="form__label form__label--${h.ACTIVE}"\n          >Активная</label\n        >\n        <input\n          id="status-${h.DONE}"\n          class="form__radio form__radio--${h.DONE} visually-hidden"\n          type="radio"\n          name="taskStatus"\n          value=${h.DONE}\n          ${i===h.DONE?"checked":""}  \n        />\n         <label for="status-${h.DONE}" class="form__label form__label--${h.DONE}"\n          >Выполненная</label\n        >\n        </div>\n      </fieldset>\n      <fieldset class="form__field form__field--action">\n      <legend class="form__legend form__legend--action visually-hidden">\n        Действия:\n      </legend>\n      <div class="form__inner--action">\n      <button class="form__button form__button--save" type="submit" data-action="save">\n        Сохранить\n      </button>\n      <button class="form__button form__button--cancel" type="button" data-action="cancel">\n        Отменить\n      </button>\n      </div>\n      </fieldset>\n    </form>\n  </section>`}bind(){this._form=this.element.querySelector(".form"),this._form.addEventListener("submit",this._onSubmit),this._form.addEventListener("keyup",this._onKeyUp),this._card=this.element.querySelector(".card-edit"),this._card.addEventListener("click",this._onUserClick),this._setFocus()}unbind(){this._form.removeEventListener("submit",this._onSubmit),this._form.removeEventListener("keyup",this._onKeyUp),this._card.removeEventListener("click",this._onUserClick)}onNewTaskAdd(){}onChangeCard(){}onTaskChange(){}}class x extends e{constructor(t,e){super(e),this._task=t,this._parentElement=e,this._onUserClick=this._onUserClick.bind(this),this._onKeyUp=this._onKeyUp.bind(this)}_setFocus(){setTimeout(()=>{this._card.querySelector(".card__button--change").focus()},50)}_onKeyUp(t){const{code:e}=t;e===m&&this.unrender()}_onUserClick(t){const{action:e}=t.target.dataset;if(e)if("cancel"===e)this.unrender();else if("change"===e)this.changeTask(this._task);else if("delete"===e){const{taskId:t,taskDate:e}=this._task;this.onTaskDelete(e,t),this.unrender()}}get template(){const{taskColor:t,taskName:e,taskDescription:s,taskDate:a,taskStatus:n}=this._task;return`<section class="app__card card" data-action="cancel">\n    <h2 class="visually-hidden">Просмотр задачи</h2>\n    <div class="card__info" data-status=${n}>\n        <div class="card__color" data-color=${t} data-status=${n}></div>\n        <span class="card__date">${p(a,!0)}</span>\n        <span class="card__name">${e}</span>\n        ${s.trim()?`<span class="card__description">${s}</span>`:""}\n        <div class="card__controls">\n            <button class="card__button card__button--change" type="button" data-action="change">\n            Изменить\n            </button>\n            <button class="card__button card__button--delete" type="button" data-action="delete">\n            Удалить\n            </button>\n            <button class="card__button card__button--cancel" type="button" data-action="cancel">\n            Отменить\n            </button>\n        </div>\n    </div>    \n  </section>`}bind(){this._card=this.element.querySelector(".card"),this._card.addEventListener("click",this._onUserClick),this._card.addEventListener("keyup",this._onKeyUp),this._setFocus()}unbind(){this._card.removeEventListener("click",this._onUserClick),this._card.removeEventListener("keyup",this._onKeyUp)}changeTask(){}onTaskDelete(){}}const P=t=>{const{date:e,color:s,status:a,text:n}=t,i=n.replace(_,"<span class='result__mark'>").replace(u,"</span>");return`<li class='search__item result'>\n  <div class='result__screen' data-date=${e} data-action='set' tabindex='0'></div>\n    <div class='result__wrapper'>    \n      <p class='result__date' data-color=${s} data-status=${a}>${p(e,!0)}</p>    \n      <p class='result__name' data-status=${a}>${i}</p>   \n    </div>    \n  </li>`};class U extends e{constructor(t,e){super(e),this._data=t,this._emptyMessage="Ничего не найдено",this._onClick=this._onClick.bind(this),this._onKeyDown=this._onKeyDown.bind(this)}_setFocus(){setTimeout(()=>{this._search.querySelector(".search__button").focus()},50)}_onKeyDown(t){const{code:e}=t;e===m?this.unrender():e===k&&this._onClick(t)}_onClick(t){const{action:e,date:s}=t.target.dataset;"close"===e?this.unrender():"set"===e&&(this.onResultClick(s),this.unrender())}_getResultsTemplate(){const{_data:t,_emptyMessage:e}=this;return 0===t.length?`<p class='search__empty'>${e}</p>`:`<ul class='search__list'>${t.map(t=>P(t)).join("")}</ul> `}get template(){return`<section class='app__search search' data-action='close'>\n    <h2 class='visually-hidden'>Результаты поиска</h2>\n    <div class='search__inner'>\n    ${this._getResultsTemplate()}\n        <div class='search__controls'>\n            <button class='search__button' data-action='close'>Закрыть</button>\n        </div>\n    </div>\n    </section>`}bind(){this._search=this.element.querySelector(".search"),this._search.addEventListener("click",this._onClick),this._search.addEventListener("keydown",this._onKeyDown),this._setFocus()}unbind(){this._search.removeEventListener("click",this._onClick),this._search.removeEventListener("keydown",this._onKeyDown)}onResultClick(){}}class A extends e{get template(){return'<section class="loading">\n    <h2 class="visually-hidden">Идет загрузка данных</h2>\n    <div class="loading__wrapper ">\n        <div class="loading__inner">\n            <svg class="loading__svg" width="108px"  height="108px"   viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" class="lds-flickr" style="background: none;"><circle ng-attr-cx="{{config.cx1}}" cy="50" ng-attr-fill="{{config.c1}}" ng-attr-r="{{config.radius}}" cx="64.6654" fill="orange" r="20"><animate attributeName="cx" calcMode="linear" values="30;70;30" keyTimes="0;0.5;1" dur="1" begin="-0.5s" repeatCount="indefinite"></animate></circle><circle ng-attr-cx="{{config.cx2}}" cy="50" ng-attr-fill="{{config.c2}}" ng-attr-r="{{config.radius}}" cx="35.3346" fill="yellowgreen" r="20"><animate attributeName="cx" calcMode="linear" values="30;70;30" keyTimes="0;0.5;1" dur="1" begin="0s" repeatCount="indefinite"></animate></circle><circle ng-attr-cx="{{config.cx1}}" cy="50" ng-attr-fill="{{config.c1}}" ng-attr-r="{{config.radius}}" cx="64.6654" fill="yellow" r="20"><animate attributeName="cx" calcMode="linear" values="30;70;30" keyTimes="0;0.5;1" dur="1" begin="-0.5s" repeatCount="indefinite"></animate><animate attributeName="fill-opacity" values="0;0;1;1" calcMode="discrete" keyTimes="0;0.499;0.5;1" ng-attr-dur="{{config.speed}}s" repeatCount="indefinite" dur="1s"></animate></circle></svg>\n        </div>\n    </div>\n    </section>'}}class O extends e{constructor(t){super(t),this._parentElement=t,this._cardEditView=N,this._cardView=x,this._searchView=U,this._loadingView=A,this.changeTask=this.changeTask.bind(this)}showCreateCard(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this._currentView=new this._cardEditView(t,this._parentElement,e),this._currentView.onNewTaskAdd=this.onNewTaskAdd,this._currentView.onTaskChange=this.onTaskChange,this._currentView.render()}showTaskCard(t){this._currentView=new this._cardView(t,this._parentElement),this._currentView.onTaskDelete=this.onTaskDelete,this._currentView.changeTask=this.changeTask,this._currentView.render()}changeTask(t){this._currentView.unrender();const{taskDate:e}=t;this.showCreateCard(e,t)}showLoading(){this._currentView=new this._loadingView(this._parentElement),this._currentView.render()}showSearchResults(t){this._currentView.unrender(),this._currentView=new U(t,this._parentElement),this._currentView.onResultClick=this.onResultClick,this._currentView.render()}bind(){}unbind(){}onNewTaskAdd(){}onTaskDelete(){}onTaskChange(){}onResultClick(){}}class R extends e{constructor(t){super(t),this._parentElement=t}get template(){return'<footer class="app__footer footer">\n        <ul class="footer__contacts contacts">\n          <li class="contacts__item">\n            <a class="contacts__link contacts__link--github" href="https://github.com/My420">\n                <span class="visually-hidden">Github</span>\n                <svg  class="contacts__icon contacts__icon--github" width="100%" height="100%" viewBox="0 0 24 24"><path class="contacts__path contacts__path--github" d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/></svg>\n            </a>\n          </li>\n          <li class="contacts__item">\n            <a class="contacts__link contacts__link--mail" href="mailto:klinovitsky.aleksey@gmail.com">\n                <span class="visually-hidden">Почта</span>\n                <svg  class="contacts__icon contacts__icon--email" width="100%" height="100%" viewBox="0 0 24 24"><path class="contacts__path contacts__path--email" d="M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z"/></svg>\n            </a>\n          </li>\n          <li class="contacts__item">\n            <a class="contacts__link contacts__link--skype" href="skype:live:klinovitsky.aleksey?chat">\n              <span class="visually-hidden">Skype</span>\n              <svg  class="contacts__icon contacts__icon--skype" width="100%" height="100%" viewBox="0 0 24 24"><path class="contacts__path contacts__path--skype" d="M22.987 13.966c1.357-7.765-5.416-14.412-13.052-12.979-5.821-3.561-12.503 3.226-8.935 9.029-1.387 7.747 5.384 14.48 13.083 13.01 5.832 3.536 12.493-3.26 8.904-9.06zm-10.603 5.891c-3.181 0-6.378-1.448-6.362-3.941.005-.752.564-1.442 1.309-1.442 1.873 0 1.855 2.795 4.837 2.795 2.093 0 2.807-1.146 2.807-1.944 0-2.886-9.043-1.117-9.043-6.543 0-2.938 2.402-4.962 6.179-4.741 3.602.213 5.713 1.803 5.917 3.289.101.971-.542 1.727-1.659 1.727-1.628 0-1.795-2.181-4.6-2.181-1.266 0-2.334.528-2.334 1.674 0 2.395 8.99 1.005 8.99 6.276-.001 3.039-2.423 5.031-6.041 5.031z"/></svg>\n            </a>\n          </li>\n        </ul>\n      </footer>'}}class M extends e{constructor(t,e){super(e),this._allDates=t.dates,this._calendarPeriodTasks=t.tasks}_getTasksForTasksList(t){const e=n(t);return this._calendarPeriodTasks[e]}_findContainers(){this._modalContainer=this.element.querySelector(".container__modal"),this._headerContainer=this.element.querySelector(".container__header"),this._calendarContainer=this.element.querySelector(".container__calendar"),this._tasksContainer=this.element.querySelector(".container__tasks"),this._footerContainer=this.element.querySelector(".container__footer")}_createChildrenView(){const{calendarDate:t,tasksDate:e,todayDate:s}=this._allDates,a=this._getTasksForTasksList(e);this._header=new g(t,this._headerContainer),this._calendar=new T(t,e,s,this._calendarPeriodTasks,this._calendarContainer),this._tasks=new S(e,a,this._tasksContainer),this._modal=new O(this._modalContainer),this._footer=new R(this._footerContainer)}_setChildrenViewHendlerFunction(){this._header.onPrevButtonClick=this.onPrevButtonClick,this._header.onNextButtonClick=this.onNextButtonClick,this._header.onSearchButtonClick=this.onSearchButtonClick,this._header.onCreateButtonClick=()=>this._modal.showCreateCard(this._allDates.tasksDate),this._calendar.onCellClick=this.onCellClick,this._modal.onNewTaskAdd=this.onNewTaskAdd,this._modal.onTaskDelete=this.onTaskDelete,this._modal.onTaskChange=this.onTaskChange,this._modal.onResultClick=this.onResultClick,this._tasks.onTaskClick=this.onTaskClick,this._tasks.onTaskChange=this.onTaskChange}_renderChildrenView(){this._header.render(),this._calendar.render(),this._tasks.render(),this._footer.render()}get template(){return'<div class="container container__modal"></div>\n    <div class="container container__header"></div>\n    <div class="container container__main">\n    <main class="app__main">\n    <div class="container container__calendar"></div>\n    <div class="container container__tasks"></div>\n    </main>\n    </div>\n    <div class="container container__footer"></div>\n    '}bind(){this._findContainers(),this._createChildrenView(),this._setChildrenViewHendlerFunction(),this._renderChildrenView()}changeCalendarDate(t,e){this._allDates=t,this._calendarPeriodTasks=e;const{calendarDate:s,tasksDate:a,todayDate:n}=this._allDates;this._header.changeDisplayedDate(s),this._calendar.changeCalendar(s,a,n,this._calendarPeriodTasks),this._tasks.changeTasks(a,this._getTasksForTasksList(a))}addTask(t){this._calendar.addTaskToCell(t),this._tasks.addTaskToList(t)}changeTasksDate(t,e){this._allDates.tasksDate=t,this._calendar.changeActiveCell(t),this._tasks.changeTasks(t,e)}showTaskCard(t){this._modal.showTaskCard(t)}deleteTask(t,e){this._calendar.deleteTaskFromCell(t,e),this._tasks.deleteTaskFromList(e)}changeTask(t){this._calendar.changeTaskInCell(t),this._tasks.changeTask(t)}migrateTask(t){const{deletedTask:e,addedTask:s}=t,{taskDate:a,taskId:n}=e;this.deleteTask(a,n),this._calendar.addTaskToCell(s)}showLoading(){this._modal.showLoading()}showSearchResults(t){this._modal.showSearchResults(t)}onPrevButtonClick(){}onNextButtonClick(){}onSearchButtonClick(){}onNewTaskAdd(){}onTaskDelete(){}onTaskChange(){}onResultClick(){}onCellClick(){}onTaskClick(){}}const V=(t,e)=>{return t.slice(0,7)===e.slice(0,7)};class B{constructor(){this._todayDate=new Date,this._calendarDate=new Date,this._calendarDate.setDate(1),this._tasksDate=new Date}static toJsonWithLocalTimeZone(t){return new Date(t.getTime()-6e4*t.getTimezoneOffset()).toJSON()}get todayDate(){return B.toJsonWithLocalTimeZone(this._todayDate)}get calendarDate(){return B.toJsonWithLocalTimeZone(this._calendarDate)}get tasksDate(){return B.toJsonWithLocalTimeZone(this._tasksDate)}get allDates(){return{calendarDate:this.calendarDate,tasksDate:this.tasksDate,todayDate:this.todayDate}}setNextMonth(){return this._calendarDate.setMonth(this._calendarDate.getMonth()+1),V(this.calendarDate,this.todayDate)?this._tasksDate=new Date(this.todayDate):this._tasksDate=new Date(this.calendarDate),this.allDates}setPrevMonth(){return this._calendarDate.setMonth(this._calendarDate.getMonth()-1),V(this.calendarDate,this.todayDate)?this._tasksDate=new Date(this.todayDate):this._tasksDate=new Date(this.calendarDate),this.allDates}setCalendarDate(t){this._calendarDate=new Date(t),this._calendarDate.setDate(1)}setTasksDate(t){return this._tasksDate=new Date(t),this.tasksDate}}class K{constructor(t,e){this._localStorage=window.localStorage,this._APP_KEY=t,this._defaultAppStorage=e,this._createAppLocalStorage()}_createAppLocalStorage(){this._localStorage.getItem(this._APP_KEY)||this._localStorage.setItem(this._APP_KEY,JSON.stringify(this._defaultAppStorage))}get appLocalStorage(){return JSON.parse(this._localStorage.getItem(this._APP_KEY))}set appLocalStorage(t){this._localStorage.setItem(this._APP_KEY,JSON.stringify(t))}}const q=t=>{return t.replace(/[|\\{}()[\]^$+*?.-]/g,"\\$&")},I=(t,e)=>{const s=q(e);return new RegExp(s,"i").test(t)},F=function(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"*",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"*";const n=q(e),i=new RegExp(n,"i");return t.replace(i,t=>`${s}${t}${a}`)},Y=(t,e)=>{if("object"==typeof t){if(Array.isArray(t))return t.length>0?(e(t),null):null;const s=Object.keys(t);for(let a=0;a<s.length;a+=1)Y(t[s[a]],e)}return null};class j{constructor(t){this._key=t,this._defaultStorage=o,this._localStorage=new K(this._key,this._defaultStorage),this._taskStore=this._localStorage.appLocalStorage,this._createSearchAnswerList=this._createSearchAnswerList.bind(this)}_updateLocalStorage(){this._localStorage.appLocalStorage=w({},this._taskStore)}_findDay(t){const e=a(t);return this._taskStore[e.month][e.year]&&this._taskStore[e.month][e.year][e.date]?this._taskStore[e.month][e.year][e.date]:null}_findYear(t){const e=a(t);return this._taskStore[e.month][e.year]?this._taskStore[e.month][e.year]:null}_createSearchAnswerList(t){const e=this._searchText;for(let s=0;s<t.length;s+=1){const a=t[s],{taskDate:n,taskName:i,taskDescription:r,taskColor:o,taskStatus:l}=a;if(I(i,e)||I(r,e)){const t=I(i,e)&&F(i,e,_,u),s=I(r,e)&&F(r,e,_,u),a={date:n,color:o,status:l,text:t||s};this._searchResult.push(a)}}}getTasksForDay(t){const e=this._findDay(t);return e&&[...e]}getTasksForCalendarPeriod(t){const e=new Date(t);b(e);const s={};for(let t=0;t<r;t+=1){const t=n(e.toJSON()),a=this.getTasksForDay(t);a&&(s[t]=a),e.setDate(e.getDate()+1)}return s}addNewTask(t){const{taskDate:e}=t,s=a(e),n=this._findDay(e),i=this._findYear(e);return i?n?n.push(t):i[s.date]=[t]:this._taskStore[s.month][s.year]={[s.date]:[t]},this._updateLocalStorage(),w({},t)}getTask(t,e){const s=this._findDay(t);for(let t=0;t<s.length;t+=1)if(s[t].taskId===e)return w({},s[t]);return null}deleteTask(t,e){const s=this._findDay(t);if(s){const t=L(s,e),a=s.splice(t,1);return this._updateLocalStorage(),a[0]}return null}changeTask(t){const e=w({},t),{taskDate:s,taskId:a}=t,n=this._findDay(s);if(n){const t=L(n,a);return n[t]=e,this._updateLocalStorage(),w({},n[t])}return null}migrateTask(t){const{oldTask:e,newTask:s}=t,{taskDate:a,taskId:n}=e;return{deletedTask:this.deleteTask(a,n),addedTask:this.addNewTask(s)}}search(t){return new Promise(e=>{this._searchText=t,this._searchResult=[],Y(this._taskStore,this._createSearchAnswerList),e(this._searchResult)})}}class G{constructor(){this._date=new B,this._tasks=new j(c)}changeMonthToNext(){const t=this._date.setNextMonth();return{dates:t,tasks:this._tasks.getTasksForCalendarPeriod(t.calendarDate)}}changeMonthToPrev(){const t=this._date.setPrevMonth();return{dates:t,tasks:this._tasks.getTasksForCalendarPeriod(t.calendarDate)}}setCertainDate(t){this._date.setCalendarDate(t),this._date.setTasksDate(t);const e=this._date.allDates;return{dates:e,tasks:this._tasks.getTasksForCalendarPeriod(e.calendarDate)}}changeTasksDate(t){return{newTaskDate:this._date.setTasksDate(t),dayTasks:this._tasks.getTasksForDay(t)}}get calendarPeriodData(){const t=this._date.allDates;return{dates:t,tasks:this._tasks.getTasksForCalendarPeriod(t.calendarDate)}}addNewTask(t){return this._tasks.addNewTask(t)}getTask(t,e){return this._tasks.getTask(t,e)}deleteTask(t,e){return this._tasks.deleteTask(t,e)}changeTask(t){return this._tasks.changeTask(t)}migrateTask(t){return this._tasks.migrateTask(t)}search(t){return this._tasks.search(t)}}new class{constructor(t){this._rootElement=t,this._model=new G,this._view=new M(this._model.calendarPeriodData,this._rootElement)}init(){this._view.onPrevButtonClick=()=>{const t=this._model.changeMonthToPrev();this._view.changeCalendarDate(t.dates,t.tasks)},this._view.onNextButtonClick=()=>{const t=this._model.changeMonthToNext();this._view.changeCalendarDate(t.dates,t.tasks)},this._view.onCellClick=t=>{const{newTaskDate:e,dayTasks:s}=this._model.changeTasksDate(t);this._view.changeTasksDate(e,s)},this._view.onNewTaskAdd=t=>{const e=this._model.addNewTask(t);this._view.addTask(e)},this._view.onTaskClick=(t,e)=>{const s=this._model.getTask(t,e);this._view.showTaskCard(s)},this._view.onTaskDelete=(t,e)=>{const s=this._model.deleteTask(t,e),{taskDate:a,taskId:n}=s;this._view.deleteTask(a,n)},this._view.onTaskChange=t=>{if(t.oldTask.taskDate===t.newTask.taskDate){const e=this._model.changeTask(t.newTask);this._view.changeTask(e)}else{const e=this._model.migrateTask(t);this._view.migrateTask(e)}},this._view.onSearchButtonClick=async t=>{this._view.showLoading();const e=await this._model.search(t);this._view.showSearchResults(e)},this._view.onResultClick=t=>{const e=this._model.setCertainDate(t);this._view.changeCalendarDate(e.dates,e.tasks)},this._view.render()}}(document.querySelector(".root")).init()}();